// Code generated by protoc-gen-go. DO NOT EDIT.
// source: scheduler.proto

/*
Package scheduler is a generated protocol buffer package.

It is generated from these files:
	scheduler.proto

It has these top-level messages:
	Organization
	ResourceVolume
	Decision
*/
package scheduler

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/any"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Organization struct {
	Name  string               `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Quota *google_protobuf.Any `protobuf:"bytes,2,opt,name=Quota" json:"Quota,omitempty"`
}

func (m *Organization) Reset()                    { *m = Organization{} }
func (m *Organization) String() string            { return proto.CompactTextString(m) }
func (*Organization) ProtoMessage()               {}
func (*Organization) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Organization) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Organization) GetQuota() *google_protobuf.Any {
	if m != nil {
		return m.Quota
	}
	return nil
}

type ResourceVolume struct {
	CPU        uint32        `protobuf:"varint,1,opt,name=CPU" json:"CPU,omitempty"`
	GPU        uint32        `protobuf:"varint,2,opt,name=GPU" json:"GPU,omitempty"`
	RAMmb      uint32        `protobuf:"varint,3,opt,name=RAMmb" json:"RAMmb,omitempty"`
	TimePeriod int64         `protobuf:"varint,4,opt,name=TimePeriod" json:"TimePeriod,omitempty"`
	Owner      *Organization `protobuf:"bytes,5,opt,name=Owner" json:"Owner,omitempty"`
}

func (m *ResourceVolume) Reset()                    { *m = ResourceVolume{} }
func (m *ResourceVolume) String() string            { return proto.CompactTextString(m) }
func (*ResourceVolume) ProtoMessage()               {}
func (*ResourceVolume) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ResourceVolume) GetCPU() uint32 {
	if m != nil {
		return m.CPU
	}
	return 0
}

func (m *ResourceVolume) GetGPU() uint32 {
	if m != nil {
		return m.GPU
	}
	return 0
}

func (m *ResourceVolume) GetRAMmb() uint32 {
	if m != nil {
		return m.RAMmb
	}
	return 0
}

func (m *ResourceVolume) GetTimePeriod() int64 {
	if m != nil {
		return m.TimePeriod
	}
	return 0
}

func (m *ResourceVolume) GetOwner() *Organization {
	if m != nil {
		return m.Owner
	}
	return nil
}

type Decision struct {
	// Pairs jobs[idx] -> workers[idx]
	JobIdx    uint64 `protobuf:"varint,1,opt,name=JobIdx" json:"JobIdx,omitempty"`
	WorkerIdx uint64 `protobuf:"varint,2,opt,name=WorkerIdx" json:"WorkerIdx,omitempty"`
}

func (m *Decision) Reset()                    { *m = Decision{} }
func (m *Decision) String() string            { return proto.CompactTextString(m) }
func (*Decision) ProtoMessage()               {}
func (*Decision) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Decision) GetJobIdx() uint64 {
	if m != nil {
		return m.JobIdx
	}
	return 0
}

func (m *Decision) GetWorkerIdx() uint64 {
	if m != nil {
		return m.WorkerIdx
	}
	return 0
}

func init() {
	proto.RegisterType((*Organization)(nil), "Organization")
	proto.RegisterType((*ResourceVolume)(nil), "ResourceVolume")
	proto.RegisterType((*Decision)(nil), "Decision")
}

func init() { proto.RegisterFile("scheduler.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 263 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0xdb, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x49, 0x93, 0x14, 0x3b, 0x1a, 0x95, 0xa5, 0x48, 0x14, 0x91, 0x10, 0x6f, 0x82, 0x17,
	0x29, 0xe8, 0x0b, 0x58, 0x14, 0x44, 0xc1, 0x36, 0x2e, 0x56, 0xaf, 0x73, 0x18, 0x63, 0x30, 0xd9,
	0x91, 0x4d, 0x16, 0xad, 0x2f, 0xe1, 0x2b, 0xcb, 0xee, 0x2a, 0xf6, 0xee, 0x3f, 0x0c, 0x1f, 0xf3,
	0xc3, 0x5e, 0x5f, 0xbe, 0x62, 0xa5, 0x5a, 0x94, 0xe9, 0xbb, 0xa4, 0x81, 0x8e, 0x0e, 0x6b, 0xa2,
	0xba, 0xc5, 0x99, 0x71, 0x85, 0x7a, 0x99, 0xe5, 0x62, 0x6d, 0xab, 0x78, 0x01, 0x3b, 0x4b, 0x59,
	0xe7, 0xa2, 0xf9, 0xca, 0x87, 0x86, 0x04, 0x63, 0xe0, 0x2d, 0xf2, 0x0e, 0x43, 0x27, 0x72, 0x92,
	0x09, 0x37, 0x9a, 0x9d, 0x81, 0xff, 0xa0, 0x68, 0xc8, 0xc3, 0x51, 0xe4, 0x24, 0xdb, 0xe7, 0xd3,
	0xd4, 0xe2, 0xd2, 0x3f, 0x5c, 0x3a, 0x17, 0x6b, 0x6e, 0x4f, 0xe2, 0x6f, 0x07, 0x76, 0x39, 0xf6,
	0xa4, 0x64, 0x89, 0x4f, 0xd4, 0xaa, 0x0e, 0xd9, 0x3e, 0xb8, 0x57, 0xd9, 0xca, 0x10, 0x03, 0xae,
	0xa5, 0x4e, 0x6e, 0xb2, 0x95, 0xc1, 0x05, 0x5c, 0x4b, 0x36, 0x05, 0x9f, 0xcf, 0xef, 0xbb, 0x22,
	0x74, 0x4d, 0x66, 0x0d, 0x3b, 0x01, 0x78, 0x6c, 0x3a, 0xcc, 0x50, 0x36, 0x54, 0x85, 0x5e, 0xe4,
	0x24, 0x2e, 0xdf, 0x48, 0xd8, 0x29, 0xf8, 0xcb, 0x0f, 0x81, 0x32, 0xf4, 0xcd, 0x63, 0x41, 0xba,
	0x39, 0x85, 0xdb, 0x2e, 0xbe, 0x84, 0xad, 0x6b, 0x2c, 0x9b, 0x5e, 0xaf, 0x3b, 0x80, 0xf1, 0x1d,
	0x15, 0xb7, 0xd5, 0xa7, 0xf9, 0xc6, 0xe3, 0xbf, 0x8e, 0x1d, 0xc3, 0xe4, 0x99, 0xe4, 0x1b, 0x4a,
	0x5d, 0x8d, 0x4c, 0xf5, 0x1f, 0x14, 0x63, 0x33, 0xf4, 0xe2, 0x27, 0x00, 0x00, 0xff, 0xff, 0xd1,
	0x99, 0xb3, 0xd3, 0x58, 0x01, 0x00, 0x00,
}
